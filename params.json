{"name":"botdylan","tagline":"Once upon a time, you controled your Github repositories, the pull requests and the commits... didn't yoooou?","body":"![](https://raw.github.com/botdylan/botdylan/master/img/botdylan.png)\r\n\r\nOnce upon a time, you managed your Github repositories,\r\n\r\nthe pull requests and the commits... didn't yoooou?\r\n\r\n# `botdylan`: Automatize your Github processes with js scripts.\r\n\r\n`botdylan` runs as a daemon. Is configured by writing a `config.json` file\r\nthat will contain all the information about the `cron` and `hooks` scripts.\r\n\r\n```\r\n$ ls /etc/botdylan\r\nscripts/hooks\r\nscripts/cron\r\nconfig.json\r\n\r\n$ botdylan --dir /etc/botdylan\r\n```\r\n\r\n## Why?\r\n\r\n`botdylan` was initially build and used internally at [Teambox](http://teambox.com].\r\n\r\nWe use Github heavily. There are some repetitive tasks that are taking away our time\r\nfrom hacking a better product. Since we are on the productive space we decided to\r\nstop doing things manually and start to have a more productive environment to work with.\r\n\r\nThe project is heavily inspired by [hubot](https://github.com/github/hubot).\r\n\r\n## Command line options\r\n\r\n`botdylan` has just one CLI option:\r\n\r\n  * `dir [current_path]`: Location of your `script` folders and `config.json`.\r\n\r\n## Config.json\r\n\r\nConfiguring botdylan is damn simple! Just populate your `config.json` file on your\r\nconfiguration directory with the following options:\r\n\r\n  * `username`: Bot username\r\n  * `password`: Bot password\r\n  * `repositories`: Hash of repositories (owner/repository) with the `cron` and `hooks` setted up\r\n  * `port [80]`: Port to listen github webhooks\r\n  * `silent [false]`: Flag to disable output\r\n\r\n``` javascript\r\n{\r\n  \"username\": \"botdylan\"\r\n, \"password\": \"blood-on-the-tracks\"\r\n, \"url\": \"http://example.com\"\r\n, \"port\": 5000\r\n, \"repositories\": {\r\n    \"botdylan/test\": {\r\n      \"crons\": {\r\n        \"0 0 0 * * *\": [\"ping\"]\r\n      }\r\n    , \"hooks\": {\r\n        \"issue_comment\": [\"pong\"]\r\n      , \"push\" : [\"cowboys\"]\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nScripts under `scripts/hooks` will run on any given [hook event](http://developer.github.com/v3/repos/hooks/),\r\n`botdylan` will create the hooks automatically if they don't exist.\r\n\r\nScripts under `scripts/cron` use the `cron` syntax.\r\n\r\n## How to write `botdylan` scripts?\r\n\r\nThe scripts should export a single function that will be executed by\r\n`botdylan`. Hook scripts will receive the request object.\r\n\r\nUse [node-github](https://github.com/ajaxorg/node-github) to access the API.\r\n\r\nCron scripts receive:\r\n  - `bot`\r\n  - `repo_info`\r\n\r\nHooks scripts receive:\r\n  - `bot`\r\n  - `repo_info`\r\n  - `payload`\r\n\r\nYou will find plenty of examples on the `scripts` folder.\r\n\r\n## The `bot` helper object\r\n\r\nThis object represents our beloved bot. It has some methods to help you write your scripts:\r\n\r\n  - `trace`: Write a message to the console unless the `silent` option is sent\r\n  - `options`: Options from your `config.json` file\r\n  - `handleError`: Function applicator that handles showing errors if any\r\n  - `github`: Authenticated `GitHubApi` instance from\r\n              [node-github](https://github.com/ajaxorg/node-github)\r\n  - `http`: A [request](https://github.com/mikeal/request) instance\r\n  - `events`: Contains a `on` and an `emit` message. Ideal to communicate between scripts\r\n  - `store`: A getter/setter memory storage.\r\n\r\n# TODO\r\n\r\nThere are plenty of things that we would like to have soon done:\r\n\r\n  - More scripts! Most of them can be imported from hubot which we love <3\r\n  - `scripts/events` to be able to create scripts that are invoked from custom events\r\n  - Better tools for bot to reduce the boilerplate on the scripts\r\n  - Better documentation and how to script guides\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2013 Pau Ramon <masylum@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}